# Simple workflow for deploying the latest documentation to GitHub Pages
name: Deploy documentation to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install pytest coverage
      - name: Run tests and generate coverage report
        run: |
          # Run tests with coverage
          coverage run -m pytest
          # Generate HTML coverage report
          coverage html --skip-empty --precision=1 --directory=docs/source/_static/coverage_report
      - name: Build documentation
        run: |
          python -m pip install sphinx furo
          # Build the documentation using Sphinx
          sphinx-build -b html docs/source docs/build/html
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the HTML coverage report directory
          path: './docs/build/html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
